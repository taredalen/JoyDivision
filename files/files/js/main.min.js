var bandData;
var BAND_ACTIVE = false;

window.addEventListener("mousewheel", e => {
	if (e.deltaX === 0) {
		e.stopPropagation();
		e.preventDefault();
		window.scrollBy(e.deltaY, 0);
	}
});


$(document).ready(function() {
	resetAll();
	mobileSetup();
	startAnimation(() => {
		setTimeout(() => {
			loadPage();
		}, 1000);
	});
});

async function loadPage() {
	scrollHandler();
	await checkElement("._SS_wrapper");
	bandData = await loadData(); // l'opérateur await permet d'attendre la résolution d'une promesse
	await animatePageIn();
	navHandler();
	if (!isMobile()) {
		listScroller();
		hoverTracker();
	} clickListener();
}

function startAnimation(done) {
	$("#content-container .load .loader").html("0%");
	setTimeout(() => {
		for(let i = 0; i < 19; i++) {
			setTimeout((index) => {
				$("#content-container .load .loader").html(index + "%");
			}, i*30, i);
		}
		setTimeout(() => {
			for(let i = 17; i < 65; i++) {
				setTimeout((index) => {
					$("#content-container .load .loader").html(index + "%");
				}, i*15, i);
			}
			setTimeout(() => {
				for(let i = 66; i <= 100; i++) {
					setTimeout((index) => {
						$("#content-container .load .loader").html(index + "%");
					}, i*15, i);
				}
				setTimeout(() => {
					done();
				}, 600)
			}, 1000)
		}, 1000);
	}, 1000);
}

function rafAsync() {
    return new Promise(resolve => {
        requestAnimationFrame(resolve);
    });
}

async function checkElement(selector) {
	let querySelector = null;
	while (querySelector === null) {
		await rafAsync();
        querySelector = document.querySelector(selector);
    } return querySelector;
}

/********************** Load Data From JSON ***********************************/

function loadData() {
	return new Promise((resolve, error) => {
		fetch("files/js/data.json")
			.then((data) => data.json())
			.then((data) => {
				for (i = 0; i < 4; i++) {
					$("#content-container .band-list ul").append(
						`<li class="list-item w-animate clickable passive" data-id="${data[i].id}">
							<img draggable="false" data-lazysrc="files/imgs/band-back/${data[i].id}/cover.jpg" alt="${data[i].title} Background Image">
							<p class="item-date w-animate">${data[i].date}</p>
							<div class="text-wrapper">
								<p class="item-summary w-animate">${data[i].summary}</p>
								<h1 class="item-title w-animate">${data[i].title}</h1>
							</div>
						</li>`);
				}
				$(".list-item, .w-animate, .a-animate").css("opacity", "0");
				$(".list-item, .w-animate, .a-animate").css("transform", "translateY(50%)");
				resolve(data);
		});
	});
}


function resetAll() {
	$("#content-container .parallax-wrapper.home-back").css("height", "0%");
	$("#content-container .title-wrapper *, .nav-wrapper").css("transform", "translateY(200%)");
	$("#content-container .parallax-wrapper.home-back img").css("transform", "scale(1.3)");
	$("#content-container .h-animate").css("transform", "translateY(100%)");
	$("#content-container .parallax-wrapper.home-back, #content-container .h-animate, #content-container .title-wrapper *, .nav-wrapper").css("opacity", "0");
	$("#content-container .load .loader").css("opacity", "0");
	$("#content-container .load .loader").css("transform", "translateY(50px)");
	$("#listing-container .details-wrapper *, #listing-container .primary-image-container").css("transform", "translateY(10vh)");
	$(".back-parallax-wrapper").css("opacity", "0");
	$("#listing-container .close-btn").css("display", "none");
	anime({
		targets: "#content-container .load .loader",
		opacity:1,
		translateY: "0",
		easing: "cubicBezier(0.23, 1, 0.32, 1)",
		duration: 1000,
		delay: 1000
	});
}


function animatePageIn() {
	return new Promise((resolve, error) => {

		let promiseArray = [];

		$('img[data-lazysrc]').each( function(i, e) {
			let promise = new Promise((resolve, error) => {
				this.src = $(this).data('lazysrc');
				this.onload = () => {
					resolve(i);
				}
			});
			promiseArray.push(promise);
		});

		Promise.all(promiseArray).then(() => {
			anime({
				targets: "#content-container .load .loader",
				opacity:0,
				translateY: "-50px",
				duration: 1000,
				delay: 1000,
				easing: "cubicBezier(0.755, 0.05, 0.855, 0.06)",
				complete: function() {
					$("#content-container .load").remove();

					anime({
						targets: ".nav-wrapper, .back-parallax-wrapper",
						translateY: "0%",
						opacity:1,
						easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
						duration: 1500,
						delay: 150
					});
					anime({
						targets: "#content-container .parallax-wrapper.home-back",
						height: "100%",
						opacity:1,
						easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
						duration: 1300,
						delay: 300
					});

					anime({
						targets: "#content-container .parallax-wrapper.home-back img",
						scale: "1",
						opacity:1,
						easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
						duration: 1400,
						delay: 200
					});
					setTimeout(function() {
						anime({
							targets: "#content-container .h-animate",
							translateY: "0%",
							opacity:1,
							easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
							duration: 1400,
							delay: anime.stagger(300),
							complete: function() {
								resolve();
							}
						});
					}, 600);
				}
			});
		});
	});
}


/********************** MOBILE SUPPORT ****************************************/


function isMobile() {
	return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}

function mobileSetup() {
	if (isMobile()) {
		$(".wave-filter, #content-container.band-click-area ul").each(function() {
			$(this).addClass("disabled");
		});
		$("#content-container .text-content .scroll-msg.subheader").text("Swipe Up");
		$("#band-canvas").remove();
		$("#content-container.band-click-area").css("overflow-x", "auto");
		$("#content-container.band-click-area").css("overflow-y", "hidden");
		$("#content-container.band-click-area .hold-text").remove();
		$(".hover-container").remove();
	}
}


/*************************** Navigation settings ******************************/


function navHandler() {
	var locations = [
		{ name: 'home', location: 0 },
		{ name: 'band', location: calcPosition("#content-container.band-click-area")},
		{ name: 'music', location: calcPosition("#content-container.music")},
		{ name: 'gallery',location: calcPosition("#content-container.gallery")},
		{	name: 'about', location: calcPosition("#content-container.about")}];
	$("body").data("position", locations[0].name);
	$(window).resize(() => {
		locations[1].location = calcPosition("#content-container.band-click-area")
		locations[2].location = calcPosition("#content-container.music")
		locations[3].location = calcPosition("#content-container.gallery")
		locations[4].location = calcPosition("#content-container.about")
	});
	let timeout;
	$('li.scroller span, .logo-icon').click((e) => {
		mobileNav(true);
		let parent = $(e.target).parent(".scroller").length;
		let dataName = parent ? $(e.target).parent().data("name") : $(e.target).data("name");
		let locationObj = locations.find(e => e['name'] === dataName);
		$("body").data("position", locationObj.name);
		document.querySelector(".content").scrollTo({top: locationObj.location, behavior: 'smooth'});
	});

	$('.menu-nav li span').on('hover', function() {
		$(".menu-nav .background").addClass("transition");
		setTimeout(() => {
			let image = document.querySelector(".menu-nav .background");
			image.src = `files/imgs/back/nav-back-${$(this).parent().index()+1}.png`;
			image.onload = () => {
				$(".menu-nav .background").removeClass("transition");
			};
		}, 400);
	});

	document.addEventListener('wheel', (e) => {
		if (!BAND_ACTIVE) {
			e.preventDefault();
			if (!timeout) {
				let isDown = (e.deltaY < 0) ? true : false;
				scrollPage(isDown);

				timeout = setTimeout(() => {
					timeout = undefined;
				}, 1000)
			}
		}
	}, { passive: false });

	function scrollPage(isDown) {
		let dataName = $("body").data("position");
		let index = locations.findIndex(e => e['name'] === dataName);
		let newPosition;

		if (!isDown) {
			newPosition = ((index+1) == locations.length) ? false : locations[index+1];
		} else {
			newPosition = (index == 0) ? false : locations[index-1];
		}

		if (newPosition) $("body").data("position", newPosition.name);

		locations[1].location = calcPosition("#content-container.band-click-area");
		locations[2].location = calcPosition("#content-container.music");
		locations[3].location = calcPosition("#content-container.gallery");
		locations[4].location = calcPosition("#content-container.about");

		if (newPosition != false) document.querySelector(".content").scrollTo(0, newPosition.location);
	}

	function calcPosition(e) {
		return document.querySelector(e).offsetTop;
	}

	// Mobile navigation handler

	$(".menu-nav ul li").css("opacity", "0");
	$(".menu-nav ul li").css("transform", "translateY(5vh)");

	$(".nav-wrapper .hb-button").click(function() {
		active = $(this).hasClass("close");
		mobileNav(active);
	});

	function mobileNav(close) {
		if (close) {
			anime({
				targets: ".menu-nav img.background",
				opacity: 0,
				easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
				duration: 700,
				complete: () => {
					anime({
						targets: ".menu-nav ul li",
						opacity: 0,
						easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
						duration: 800,
						complete: () => {
							$(".menu-nav ul li").css("transform", "translateY(5vh)");
							$(".menu-nav ul li").removeClass("visible");
						}
					});
					$(".nav-wrapper .hb-button").removeClass("close");
					$(".nav-wrapper .logo-icon").removeClass("invert");
					$(".menu-nav").removeClass("active");
				}
			});
		} else {
			$(".nav-wrapper .hb-button").addClass("close");
			$(".nav-wrapper .logo-icon").addClass("invert");
			$(".menu-nav").addClass("active");
			anime({
				targets: ".menu-nav ul li, .menu-nav img.background",
				opacity: 1,
				translateY: "0vh",
				easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
				duration: 1000,
				delay: anime.stagger(200, {start: 500})
			});
			$(".menu-nav ul li").each((i, e) => {
				setTimeout(() => {
					$(e).addClass("visible");
				}, i*(150 + 300));
			});
		}
	}

	let yDown = null; let xDown = null; let checkHorizontal;

	document.addEventListener('touchstart', (e) => {
		yDown = e.touches[0].clientY;
		xDown = e.touches[0].clientX;
	}, false);

	document.addEventListener('touchmove', (e) => {
		if (!BAND_ACTIVE) {
			checkHorizontal = ($(e.target).parents(".band-list").length);
			if (!checkHorizontal) e.preventDefault();

			if (e.cancelable && !checkHorizontal) e.preventDefault();

			if (!yDown || !xDown) return;

			let yUp = e.touches[0].clientY;
			let xUp = e.touches[0].clientX;
			let yDiff = yDown - yUp;
			let xDiff = xDown - xUp;

			if ( Math.abs( xDiff ) <= Math.abs( yDiff ) ) {
				e.preventDefault();
				isDown = (yDiff > 0) ? false : true;
				scrollPage(isDown);
			} else {
				e.returnValue = true;
			}

			xDown = null;
			yDown = null;
		}
	}, { passive: false, cancelable: true });
}


/****************************************
 *
 * SLIDESHOW HANDLER
 * band LIST SLIDESHOW CLICK & DRAG HANDLER
 *
 ****************************************/

function listScroller() {

	let isClick, endPosition, initialMousePosX, initialPos;
	let slider = $('#content-container .band-list');
	let maxSpeed = 5000;

	slider.css("transform", "translateX(0px)");
	calculateEndPos();

	$(document).mousedown((e) => {
		if (!isband() || BAND_ACTIVE) return;
		initialMousePosX = e.clientX;
		isClick = true;
		setTimeout(() => {
			if (isClick) {
				slider.addClass("hold");
				$(".hover-container").addClass("scroll");
				initialPos = slider.css("transform").match(/-?[\d\.]+/g);
				initialPos = parseInt(initialPos[4]);
			}
		}, 150);
	});

	$(document).mouseleave(() => {
		isClick = false;
		$(".hover-container").removeClass("scroll");
		slider.removeClass("hold");
	});

	$(document).mouseup(() => {
		isClick = false;
		setTimeout(() => {
			$(".hover-container").removeClass("scroll");
			slider.removeClass("hold");
		}, 10);
	});

	$(document).mousemove((e) => {
		if (!isClick || !isband() || BAND_ACTIVE) return;
		e.preventDefault();

		secondPosX = e.clientX;
		diff = secondPosX - initialMousePosX;
		calcPosition = initialPos - (maxSpeed * (diff / document.body.clientWidth));

		if (calcPosition > 0) calcPosition = 0;
		if (calcPosition <= (endPosition * -1)) calcPosition = endPosition*-1;

		slider.css("transform", `translateX(${calcPosition}px)`);
	});

	function isband() {
		return ($("body").data("position") == "band");
	}

	$(window).resize(() => {
		calculateEndPos();
	});

	function calculateEndPos() {
		let perView, perEntireView;
		let listItems = slider.children("ul").children("li");
		let sliderWidth = 0;

		$("#content-container .band-list ul li").each(function() {
			sliderWidth += $(this).outerWidth();
			perView = Math.floor(slider.outerWidth()/$(this).outerWidth());
		});

		perEntireView = sliderWidth / listItems.length;
		endPosition = perEntireView * (listItems.length - perView);
	}
}






/****************************************
 *
 * band CANVAS
 * CANVAS MOUSE TRACKING, HOVERING, AND CLICKING
 *
 ****************************************/

function hoverTracker() {
	let hoverContainer = ".hover-container";
	let x = 0;
	let y = 0;

	$(document).mousemove(trackMouse);
	$(document).mouseup((e) => {setTimeout(() => {trackMouse(e)}, 50);});

	function trackMouse(e) {
		let t = 0;
		let active;

		if ($(".band-list").hasClass("hold")) return;

		clickableElement = isHoveringClickable(e);
		if (clickableElement) {
			$(hoverContainer).addClass("hover");
			$("body").css("cursor", "pointer");
			if (!$(clickableElement).hasClass("hover")) {
				$(clickableElement).addClass("hover").trigger("hover");
			}
			$(".hover:not(.hover-container)").each(function() {
				if (this != clickableElement) {
					$(this).removeClass("hover");
				}
			});
		} else {
			$("body").css("cursor", "default");
			$(".hover").each(function() {
				$(this).removeClass("hover");
			});
		}

		if ($(clickableElement).hasClass("passive") || !clickableElement) {
			active = {
				x: e.clientX,
				y: e.clientY
			}
		} else {
			active = {
				x: (clickableElement.getBoundingClientRect().left + ($(clickableElement).width() / 2)),
				y: (clickableElement.getBoundingClientRect().top + ($(clickableElement).height() / 2))
			},
			active = {
				x: active.x + ((active.x - e.clientX)*0.1),
				y: active.y + ((active.y - e.clientY)*0.1)
			}
		}

		function loop() {
			x += (easeInOutQuad(t) * ((active.x - x) - ($(hoverContainer).width() / 2)));
			y += (easeInOutQuad(t) * ((active.y - y) - ($(hoverContainer).height() / 2)));

			$(hoverContainer).css("left", x + "px");
			$(hoverContainer).css("top", y + "px");

			if (t < 1) {
				t += 0.04;
				requestAnimationFrame(loop);
			}
		}
		loop();

		if (!$(hoverContainer).hasClass("active")) {
			$(hoverContainer).css("left", (e.clientX - $(hoverContainer).width() / 2)+ "px");
			$(hoverContainer).css("top", (e.clientY - $(hoverContainer).height() / 2) + "px");
			$(hoverContainer).css("display", "block");
			setTimeout(() => {
				$(hoverContainer).addClass("active");
			}, 200);
		}
	}

	$(hoverContainer).click((e) => {
		clickableElement = isHoveringClickable(e);
		if (clickableElement) $(clickableElement).click();
	});

	function isHoveringClickable(e) {
		let isHover, hoverElem;

		$(".clickable").each(function (i) {
			let elemTop = $(this).offset().top;
			let elemBottom = elemTop + $(this).outerHeight();
			let elemLeft = $(this).offset().left;
			let elemRight = elemLeft + $(this).outerWidth();

			if (!isHover) {
				isHover = (((e.pageY <= elemBottom) && (e.pageY >= elemTop)) && ((e.pageX >= elemLeft) && (e.pageX <= elemRight)));
				hoverElem = this;
				if (hoverElem) {
					let x = hoverElem.getBoundingClientRect().left;
					let y = hoverElem.getBoundingClientRect().top;
					let topElt = document.elementFromPoint(x,y);
					if (topElt) {
						let overlay = hoverElem.contains(topElt) || topElt.isSameNode(document.querySelector(hoverContainer));

						if (!overlay) isHover = false;
					}


				}
			}
		});

		if (isHover) return hoverElem;
		return false;
	}

	function easeInOutQuad(t) {
		return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
	}
}




/****************************************
 *
 * band Click Listeners & Handlers
 * REDUNDANT CODE, NEEDS TO BE REAUDITED
 *
 ****************************************/

var bandScroll, allowAnimate;

function openItem(id) {

		if (id < 4) {

	$("#listing-container .f-date, #listing-container .f-title, #listing-container .f-description, #listing-container .links, #listing-container .f-index span, #listing-container .f-subtitle, #listing-container .f-s-description, #listing-container .roles").html("")
	$("#listing-container .scroll-wrapper").scrollTop(0);
	$("#listing-container .f-date").text(bandData[id].date);
	$("#listing-container .f-title").text(bandData[id].title);
	$("#listing-container .f-description").text(bandData[id].details.description);
	$("#listing-container .f-index span").text("0" + bandData[id].id);
	$("#listing-container .f-subtitle").text(bandData[id].details.subtitle);
	$("#listing-container .f-s-description").text(bandData[id].details.description2);
	document.querySelector("#listing-container .primary-image-container").src = 'files/imgs/band-back/'+bandData[id].id+'/primary.png';
	document.querySelector("#listing-container .secondary-image-wrapper img").src = 'files/imgs/band-back/'+bandData[id].id+'/secondary.png';

	for (i=0; i<bandData[id].roles.length; i++) {
		$("#listing-container .roles").append(`<li>${bandData[id].roles[i]}</li>`);
	}
	for (i=0; i<bandData[id].links.length; i++) {
		$("#listing-container .links").append(`<a class="w-link clickable f-link" onclick="window.open('${bandData[id].links[i].link}', '_blank')">${bandData[id].links[i].text}</li>`);
	}

	BAND_ACTIVE = true;
	$(".nav-wrapper .hb-button, .nav-wrapper .logo-icon").addClass("invert");
	$("#listing-container .details-wrapper *, #listing-container .primary-image-container, #listing-container .stats-wrapper *, #listing-container .secondary-image-wrapper").css("transform", "translateY(10vh)");
	$("#listing-container .details-wrapper *, #listing-container .primary-image-container, #listing-container .stats-wrapper *, #listing-container .secondary-image-wrapper").css("opacity", "0");

	if (isMobile()) {
		detailsAnimate();
	} else {
		allowAnimate = false;
		bandScroll = _SS.momentumScroll({
			root: "#listing-container .scroll-wrapper",
			duration: 1200,
			easing: "cubic-bezier(0.19, 1, 0.22, 1)",
			onScroll: () => {
				_SS.inView("#listing-container .stats-wrapper", {
					inView: () => {
						if (!allowAnimate) allowAnimate = true;
						if (BAND_ACTIVE && allowAnimate) detailsAnimate();
					}
				});
			}
		});
	}

	function detailsAnimate() {
		anime({
			targets: "#listing-container .secondary-image-wrapper",
			opacity: "1",
			translateY: "0vh",
			easing: "cubicBezier(0.25, 1, 0.5, 1)",
			duration: 1200
		});
		anime({
			targets: "#listing-container .scroll-section .details-wrapper *, #listing-container .stats-wrapper *",
			opacity: "1",
			translateY: "0vh",
			easing: "cubicBezier(0.25, 1, 0.5, 1)",
			duration: 1200,
			delay: anime.stagger(100),
			complete: () => {
				$("#listing-container .close-btn").css("display", "block");
				setTimeout(() => {
					$("#listing-container .close-btn").addClass("show");
				}, 100);
				allowAnimate = false;
			}
		});
	}

	anime({
		targets: ".content",
		marginLeft: "10%",
		easing: "cubicBezier(0.86, 0, 0.07, 1)",
		duration: 1200
	});
	anime({
		targets: "#listing-container .content-wrapper",
		paddingLeft: "7vw",
		easing: "cubicBezier(0.23, 1, 0.32, 1)",
		duration: 1450
	});
	anime({
		targets: "#listing-container",
		width: "100vw",
		easing: "cubicBezier(0.86, 0, 0.07, 1)",
		duration: 1200,
		complete: () => {

			anime({
				targets: "#listing-container .primary-image-container",
				opacity: "1",
				translateY: "0vh",
				easing: "cubicBezier(0.25, 1, 0.5, 1)",
				duration: 1200,
				delay: 500
			});
			anime({
				targets: "#listing-container .entry-section .details-wrapper *",
				opacity: "1",
				translateY: "0vh",
				easing: "cubicBezier(0.25, 1, 0.5, 1)",
				duration: 1200,
				delay: anime.stagger(100),
				complete: () => {
					$("#listing-container .close-btn").css("display", "block");
					setTimeout(() => {
						$("#listing-container .close-btn").addClass("show");
						$("#listing-container ._SS_dummy").height($("#listing-container .content-container").outerHeight(true));
					}, 100);
				}
			});
		}
	});
	}
}

function clickListener() {

	$(".scroller, .logo-icon").click(function(e) {
		closeItem();
	});

	$(".close-btn").on("click", () => {
		closeItem();
	});

	$(".list-item").click(function(e) {
		openItem(parseInt($(this).data('id'))-1);
	});

	$(window).resize(() => {
		if ($("#listing-container ._SS_dummy").length) {
			$("#listing-container ._SS_dummy").height($("#listing-container .content-container").outerHeight(true));
		}
		if ($(".content ._SS_dummy").length) {
			$(".content ._SS_dummy").height($(".content ._SS_wrapper")[0].scrollHeight);
		}
	});

	function closeItem() {
		if (!allowAnimate) {
			BAND_ACTIVE = false;
			$("#listing-container .close-btn").removeClass("show");
			anime({
				targets: "#listing-container .primary-image-container, #listing-container .secondary-image-wrapper",
				opacity: "0",
				easing: "cubicBezier(0.25, 1, 0.5, 1)",
				duration: 400
			});
			anime({
				targets: "#listing-container .details-wrapper *, #listing-container .stats-wrapper *",
				opacity: "0",
				easing: "cubicBezier(0.25, 1, 0.5, 1)",
				duration: 400,
				complete: () => {
					$("#listing-container .details-wrapper *, #listing-container .primary-image-container, #listing-container .stats-wrapper *, #listing-container .secondary-image-wrapper").css("transform", "translateY(10vh)");
					$("#listing-container .details-wrapper *, #listing-container .primary-image-container, #listing-container .stats-wrapper *, #listing-container .secondary-image-wrapper").css("opacity", "0");
					setTimeout(() => {
						$(".nav-wrapper .hb-button, .nav-wrapper .logo-icon").removeClass("invert");
					}, 400)
					anime({
						targets: ".content",
						marginLeft: "0",
						easing: "cubicBezier(0.86, 0, 0.07, 1)",
						duration: 1300
					});
					anime({
						targets: "#listing-container .content-wrapper",
						paddingLeft: "0",
						easing: "cubicBezier(0.86, 0, 0.07, 1)",
						duration: 1300
					});
					anime({
						targets: "#listing-container",
						width: "0vw",
						easing: "cubicBezier(0.86, 0, 0.07, 1)",
						duration: 1200,
						complete: () => {
							$("#listing-container .close-btn").css("display", "none");
							if (bandScroll) bandScroll.destroy();
							$("#listing-container .scroll-wrapper").off('scroll');
						}
					});
				}
			});
		}
	}
}





/**************************** Scroll animation handlers*******************************/

function scrollHandler() {

	let animated = [];

	function animate(el, i) {
		if (!animated.includes(el)) {
			animated.push(el);
			anime({
				targets: el,
				opacity:1,
				translateY: "0",
				easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
				duration: 1200,
				complete: function() {
					$(el).addClass("scroll-done");
				},
				delay: anime.stagger(200, {start: i*200})
			});
		}
	}

	_SS.momentumScroll({
		root: ".content",
		duration: 1200,
		easing: "cubic-bezier(.47,.08,.24,.99)",
		offsets: [
			{element: ".parallax-wrapper, .list-item", speedY: 0.85},
			{element: ".back-parallax-wrapper", speedY: 0.7},
			{element: ".about-image", speedY: 0.85}
		],
		onScroll: () => {
			if ($("body").data("position") == "band") {
				setTimeout(() => {
					$('.list-item').each(function (index) {
						anime({
							targets: ".list-item",
							opacity:1,
							translateY: "0",
							easing: "cubicBezier(0.165, 0.84, 0.44, 1)",
							duration: 1200,
							delay: anime.stagger(150, {start: 500})
						});

						setTimeout(() => {
							animate(".list-item:nth-child("+(index+1)+") .item-title.w-animate", index);
						}, 500);
						setTimeout(() => {
							animate(".list-item:nth-child("+(index+1)+") .item-summary.w-animate", index);
						}, 600);
						setTimeout(() => {
							animate(".list-item:nth-child("+(index+1)+") .item-date.w-animate", index);
						}, 700);
					});
				}, 200);
			}

			if ($("body").data("position") == "about") {
				setTimeout(() => {
					animate("#content-container.about .a-animate", 1);
					$("#content-container.about .background").css("opacity", "1");
				}, 500);
			}
		}
	});
}
